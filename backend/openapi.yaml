openapi: 3.0.0
info:
  description: "This is the short description of ROHLIG DOCKERS FTP endpoints."
  version: 1.0.0
  title: ROHLIG 
  termsOfService: http://swagger.io/terms/
  contact:
    email: molnar.laszlo@selester.hu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://20.218.182.228:4000
  - url: http://localhost:4000
tags:
  - name: api
    description: Checking service availability
  - name: api-docs
    description: Get this documentation from server
  - name: ftp
    description: Get list of files on FTP
  - name: rohligpl
    description: imports and exports file between RÃ¶hlig PL ftp and SELEXPED database
  - name: transpack
    description: Interface to Trans-pack

paths:
  /api/heartbeat:
    get:
      tags:
        - api
      summary: Checking service availability
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/heartbeat'
  /api-docs:
    get:
      tags:
        - api-docs
      summary: Get this documentation
      responses:
        "200":
          description: OK
  /ftp/pwd:
    put:
      tags:
        - ftp
      summary: Set the current directory and returns list of files in the directory
      parameters:
        - in: header
          name: path
          required: true
          schema:
            type: string
            enum: ["/tst/out/shipment", "/tst/out/status"]
      responses:
        '200':
          description: returns the list of files in selected directory.
          content:
            application/json:
              schema:
                type: object
                properties:
                  pwd:
                    type: string
                  listOfFiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/fileData'
        '404':
          description: path not exists.
  /rohligpl/shipments:
    get:
      tags:
        - rohligpl
      summary: Downloads shipment xml files from the FTP and saves them to the SQL-server database.
      responses:
        '200':
          description: Download was successfull.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                  message:
                    type: string
                  ftpTransactId:
                    type: integer
                  importedFiles:
                    type: array
                    items:
                      type: string
  /rohligpl/statuses:
    put:
      tags:
        - rohligpl
      summary: Uploads shipment statuschanges from SELEXPED to FTP.
      responses:
        '200':
          description: Download was successfull.
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
                  message:
                    type: string
                  ftpTransactId:
                    type: integer
                  importedFiles:
                    type: array
                    items:
                      type: string
  /transpack/shipments:
    get:
      tags:
        - transpack
      summary: send shipment to Trans-pack via API
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/column'
  /transpack/statuses:
    put:
      tags:
        - transpack
      summary: set Shipment status from Trans-pack
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/column'
  /transpack/login:
    post:
      tags:
        - transpack
      summary: login into Trans-pack
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/column'

components:
  schemas:
    heartbeat:
      type: object
      properties:
        heartbeat:
          type: boolean
        version:
          type: string
        dbConnection:
          type: boolean
        ftpConnection:
          type: boolean
    fileData:
      type: object
      properties:
        name:
          type: string
        type:
          type: integer
        size:
          type: integer
        rawModifiedAt:
          type: string
          format: date-time
    column:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
